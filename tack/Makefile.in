# $Id: Makefile.in,v 1.3 1997/12/07 00:55:05 tom Exp $
################################################################################
# Copyright 1997 by Thomas E. Dickey <dickey@clark.net>                        #
# All Rights Reserved.                                                         #
#                                                                              #
# Permission to use, copy, modify, and distribute this software and its        #
# documentation for any purpose and without fee is hereby granted, provided    #
# that the above copyright notice appear in all copies and that both that      #
# copyright notice and this permission notice appear in supporting             #
# documentation, and that the name of the above listed copyright holder(s) not #
# be used in advertising or publicity pertaining to distribution of the        #
# software without specific, written prior permission.                         #
#                                                                              #
# THE ABOVE LISTED COPYRIGHT HOLDER(S) DISCLAIM ALL WARRANTIES WITH REGARD TO  #
# THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND       #
# FITNESS, IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE    #
# FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER #
# RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF         #
# CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN          #
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.                     #
################################################################################
#
# Makefile for terminfo/termcap test program
#
# The following pre-processor variables may be set.
# 
# SELECT	Use this define if your operating system has the select
#		system call.
#
# WAIT_MODE	Use this define if your operating system cannot tell if
#		a chracter is ready in the input queue.  Funtion keys
#		must be padded with blanks.
#
# 	If generated without pre-processor variables, a terminfo test
#	program will be generated for System V Release 3.

# turn off _all_ suffix rules; we'll generate our own
.SUFFIXES:

SHELL		= /bin/sh
THIS		= Makefile

MODEL		= ../@DFT_OBJ_SUBDIR@
INSTALL_PREFIX	= @INSTALL_PREFIX@
srcdir		= @srcdir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@
libdir		= @libdir@

INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@

CC		= @CC@
CFLAGS		= @CFLAGS@

INCDIR		= $(srcdir)/../include
CPPFLAGS	= -I../tack -I$(srcdir) @CPPFLAGS@ \
		  -DHAVE_CONFIG_H -DSELECT 

CCFLAGS		= $(CPPFLAGS) $(CFLAGS)

CFLAGS_NORMAL	= $(CCFLAGS)
CFLAGS_DEBUG	= $(CCFLAGS) @CC_G_OPT@ -DTRACE
CFLAGS_PROFILE	= $(CCFLAGS) -pg
CFLAGS_SHARED	= $(CCFLAGS) # @CC_SHARED_OPTS@

CFLAGS_DEFAULT	= $(CFLAGS_@DFT_UPR_MODEL@)

LD		= @LD@
LINK		= $(CC)
LDFLAGS		= @EXTRA_LDFLAGS@ \
		-L../lib \
		-L$(libdir) \
		-lncurses@DFT_ARG_SUFFIX@ @LDFLAGS@ @LD_MODEL@ @LIBS@ @EXTRA_LIBS@

LDFLAGS_NORMAL	= $(LDFLAGS)
LDFLAGS_DEBUG	= $(LDFLAGS) @CC_G_OPT@
LDFLAGS_PROFILE	= $(LDFLAGS) -pg
LDFLAGS_SHARED	= $(LDFLAGS) @CC_SHARED_OPTS@ @LD_SHARED_OPTS@

LDFLAGS_DEFAULT	= $(LDFLAGS_@DFT_UPR_MODEL@)

LINT		= @LINT@
LINT_OPTS	= @LINT_OPTS@
LINT_LIBS	= -lncurses @LIBS@

# This would be $(SHARED_OBJS), but make cannot handle this much forward ref.
TACK_DEPS	= \
	$(MODEL)/ansi.o \
	$(MODEL)/charset.o \
	$(MODEL)/color.o \
	$(MODEL)/control.o \
	$(MODEL)/crum.o \
	$(MODEL)/edit.o \
	$(MODEL)/fun.o \
	$(MODEL)/init.o \
	$(MODEL)/menu.o \
	$(MODEL)/modes.o \
	$(MODEL)/output.o \
	$(MODEL)/pad.o \
	$(MODEL)/scan.o \
	$(MODEL)/sync.o \
	$(MODEL)/sysdep.o \
	$(MODEL)/tack.o

TARGET		= tack

all:	$(TACK_DEPS) $(TARGET) 

$(TARGET): $(TACK_DEPS)
	@ echo linking $@ ... ; $(LINK) $(TACK_DEPS) $(LDFLAGS_DEFAULT) -o $@

$(TACK_DEPS): $(srcdir)/tack.h

lint:
	lint $(C_SRC)

clean ::
	rm -f $(TACK_DEPS) $(TARGET) TAGS tack.tar tack.tar.gz

distclean :: clean
	-rm -f Makefile

# vi tags
tags: $(C_SRC) $(DIR)/tack.h
	ctags $(>)

# emacs tags
TAGS: $(C_SRC)
	etags $(C_SRC)

install: $(TARGET)
	$(INSTALL_PROGRAM) $(TARGET) $(INSTALL_PREFIX)$(bindir)/$(TARGET)

list: $(srcdir)/tack.h $(C_SRC)
	for name in $(>) ; \
	do \
		ucb cat -n $$name | ucb pr -h "$$name" | ucb lpr ; \
	done

#	archive a backup copy
arch: $(srcdir)/Makefile $(srcdir)/tack.h $(C_SRC)
	rm -f tack.a
	ar q tack.a $(>)

tack.tar.gz: tack.tar
	gzip tack.tar

tack.tar: makefile *.[ch] tack.1 HISTORY
	tar -cvf tack.tar makefile *.[ch] tack.1 HISTORY
