.TH curs_scroll 3X ""
.SH NAME
\fBcurs_scroll\fR: \fBscroll\fR, \fBsrcl\fR, \fBwscrl\fR - scroll a
\fBncurses\fR window
.SH SYNOPSIS
\fB#include <curses.h>\fR

\fBint scroll(WINDOW *win);\fR
.br
\fBint scrl(int n);\fR
.br
\fBint wscrl(WINDOW *win, int n);\fR
.br
.SH DESCRIPTION
The \fBscroll\fR routine scrolls the window up one line.  This involves moving
the lines in the window data structure.  As an optimization, if the scrolling
region of the window is the entire screen, the physical screen may be scrolled
at the same time.

For positive \fIn\fR, the \fBscrl\fR and \fBwscrl\fR routines scroll the
window up \fIn\fR lines (line \fIi\fR+\fIn\fR becomes \fIi\fR); otherwise
scroll the window down \fIn\fR lines.  This involves moving the lines in the
window character image structure.  The current cursor position is not changed.

For these functions to work, scrolling must be enabled via \fBscrollok\fR.
.SH RETURN VALUE
These routines return \fBERR\fR upon failure, and \fBOK\fR (SVr4 only specifies
"an integer value other than \fBERR\fR") upon successful completion.
.SH NOTES
Note that \fBscrl\fR and \fBscroll\fR may be macros.

The SVr4 documentation says that the optimization of physically scrolling 
immediately if the scroll region is the entire screen "is" performed, not
"may be" performed.  The \fBncurses\fR library deliberately does not guarantee
that this will occur, in order to leave open the possibility of smarter
optimization of multiple scroll actions on the next update. 
.SH PORTABILITY
The XSI Curses draft describes these functions.
.SH SEE ALSO
\fBncurses\fR(3X), \fBcurs_outopts\fR(3X)
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
