---------------------------------------------------------------------
             How to install Ncurses/Terminfo on your system 
---------------------------------------------------------------------
    ************************************************************
    * READ ALL OF THIS FILE BEFORE YOU TRY TO INSTALL NCURSES. *
    ************************************************************

You should be reading the file INSTALL in a directory called:
ncurses-d.d.d, where d.d.d is the current version number (see README).
There are several subdirectories, called 'src', 'test', 'misc', 'doc',
and 'man'.

REQUIREMENTS:

You will need the following in order to build and install ncurses under UNIX:

	* ANSI C compiler  (gcc is recommended)
	* sh               (bash will do)
	* awk
	* sed
	* BSD or System V style install

INSTALLATION PROCEDURE:

1.  Decide where you want to put the object files of terminal descriptions. 
    The default is /usr/share/terminfo.  If your system already has a terminfo
    database, you can put it somewhere else.  Keep in mind that this directory
    should probably be in your root filesystem so that programs which use
    terminfo can be used even when the system is only up single-user.

    The --prefix option to configure changes the root directory for installing
    ncurses; the default is in subdirectories of /usr:

    bin - tic, infocmp, clear, tput
    lib - lib?curses.a
    share - compiled terminal descriptions
    man - man pages
    include - C header files

    If you want to put the terminal descriptions in, for example,
    /usr/lib/terminfo, you can either make that a symbolic link to
    /usr/share/terminfo, or type 'make datadir=/usr/lib'.

2.  Type 'configure' to configure ncurses for your operating system and create
    the Makefiles.  You can optionally give configure options, such as
    '--prefix=/usr/local'.  Use `configure --help' to list the available
    options.

    It will create your Makefile.  If your operating system is not supported,
    read the PORTABILITY section in the file src/README for information on how
    to create a configuration file for your system.

3.  Type 'make'.  Ignore any warnings, no error messages should be produced. 
    This should compile the library, the terminfo compiler (tic), the infocmp,
    clear and tput programs (see the man pages for explanation of what they
    do), some test programs, and a modified copy of Warren Tucker's
    implementation of PANELS.  Read the file test/README for details on the
    test programs.

4.  Type 'make install' to install the libraries, the programs, and the man
    pages.  Alternately, you can type 'make install' in each directory you want
    to install.  In the src directory, you can do a partial install using these
    commands:
 
	'make install.progs' installs tic, infocmp, clear and tput.
  	'make install.libs' installs the headers and libraries.
	'make install.man' installs the man pages.
  	'make install.data' installs the terminfo database. You can skip this
  		part if your system already has such a database.
  
	CAVEAT EMPTOR: 'install.data' or 'install' will NUKE any existing
	terminfo database. If you have any custom or unusual entries SAVE them
	before you install ncurses.

	'make install' will do all the above.

5.  The c++ directory has C++ classes that are built on top of ncurses and
    panels.  You need to have panels installed before you can compile and 
    run the demo.

5a. If you're running under Linux, you must either (a) tell Linux that the
    console terminal type is `linux', or (b) make a link to or copy of the 
    linux entry in the appropriate place under your terminfo directory,
    named `console'.

    The way to change the wired-in console type is by editing /etc/inittab.
    Warning: this is not for the fainthearted, if you mess up your console
    getty entries you can make your system unusable!  However, if you are
    a Linux distribution maker, this is the right thing to do.

    The easier way is to link or copy l/linux to c/console under your terminfo
    directory.  Note: this will go away next time you do `make install.data'
    and you'll have to redo it. 

TESTING:

6.  Change to the subdirectory test and type 'make all'.

    This should compile all of the test programs in the release.  Once again,
    there should be no errors. You'll get lots of warnings, just ignore them.
    Read the file test/README for details on what to expect.

7.  Run ncurses and several other test programs.

    The ncurses program is designed specifically to test the ncurses library.
    You can use it to verify that the screen highlights work correctly, that
    cursor addressing and window scrolling works OK, etc.

NOTES:
	If you have SLS or anything based on it (slackware is OK) PLEASE
	remove everything related to ncurses before re-installing it.

	Since most systems already have a curses library, you'll need to
	distinguish between it and ncurses. If ncurses is installed outside
	the standard directories (/usr/include and /usr/lib) then you need
	to use the -I option when you compile programs and -L when you link
	them.

	If you have BSD curses installed in your system and you accidentally
	compile using its curses.h you'll end up with a large number of
	undefined symbols at link time. _waddbytes is one of them.

	The include files will be installed in /usr/include/ncurses.  To 
	arrange for your programs to see them by default, copy them to
	/usr/include from there.

	On many systems, the make production `install.sys' will install
	ncurses over the system curses libraries.  Don't do this casually!

BUGS:
	Send any feedback to me: zmbenhal@netcom.com or to the ncurses mailing
	list at ncurses-list@netcom.com 


