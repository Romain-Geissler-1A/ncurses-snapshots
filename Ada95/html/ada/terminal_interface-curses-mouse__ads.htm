<HEAD><TITLE>terminal_interface-curses-mouse.ads</TITLE></HEAD>
<BODY>
<HR><DIV ALIGN="center"><H1> File : terminal_interface-curses-mouse.ads </H1></DIV><HR>
<PRE>

<FONT COLOR=green><EM>------------------------------------------------------------------------------</EM></FONT>
<FONT COLOR=green><EM>--                                                                          --</EM></FONT>
<FONT COLOR=green><EM>--                           <A HREF="http://www.gnat.com">GNAT</A> ncurses Binding                           --</EM></FONT>
<FONT COLOR=green><EM>--                                                                          --</EM></FONT>
<FONT COLOR=green><EM>--                      Terminal_Interface.Curses.Mouse                     --</EM></FONT>
<FONT COLOR=green><EM>--                                                                          --</EM></FONT>
<FONT COLOR=green><EM>--                                 S P E C                                  --</EM></FONT>
<FONT COLOR=green><EM>--                                                                          --</EM></FONT>
<FONT COLOR=green><EM>------------------------------------------------------------------------------</EM></FONT>
<FONT COLOR=green><EM>-- Copyright (c) 1998 Free Software Foundation, Inc.                        --</EM></FONT>
<FONT COLOR=green><EM>--                                                                          --</EM></FONT>
<FONT COLOR=green><EM>-- Permission is hereby granted, free of charge, to any person obtaining a  --</EM></FONT>
<FONT COLOR=green><EM>-- copy of this software and associated documentation files (the            --</EM></FONT>
<FONT COLOR=green><EM>-- "Software"), to deal in the Software without restriction, including      --</EM></FONT>
<FONT COLOR=green><EM>-- without limitation the rights to use, copy, modify, merge, publish,      --</EM></FONT>
<FONT COLOR=green><EM>-- distribute, distribute with modifications, sublicense, and/or sell       --</EM></FONT>
<FONT COLOR=green><EM>-- copies of the Software, and to permit persons to whom the Software is    --</EM></FONT>
<FONT COLOR=green><EM>-- furnished to do so, subject to the following conditions:                 --</EM></FONT>
<FONT COLOR=green><EM>--                                                                          --</EM></FONT>
<FONT COLOR=green><EM>-- The above copyright notice and this permission notice shall be included  --</EM></FONT>
<FONT COLOR=green><EM>-- in all copies or substantial portions of the Software.                   --</EM></FONT>
<FONT COLOR=green><EM>--                                                                          --</EM></FONT>
<FONT COLOR=green><EM>-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  --</EM></FONT>
<FONT COLOR=green><EM>-- OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               --</EM></FONT>
<FONT COLOR=green><EM>-- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   --</EM></FONT>
<FONT COLOR=green><EM>-- IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   --</EM></FONT>
<FONT COLOR=green><EM>-- DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    --</EM></FONT>
<FONT COLOR=green><EM>-- OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    --</EM></FONT>
<FONT COLOR=green><EM>-- THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               --</EM></FONT>
<FONT COLOR=green><EM>--                                                                          --</EM></FONT>
<FONT COLOR=green><EM>-- Except as contained in this notice, the name(s) of the above copyright   --</EM></FONT>
<FONT COLOR=green><EM>-- holders shall not be used in advertising or otherwise to promote the     --</EM></FONT>
<FONT COLOR=green><EM>-- sale, use or other dealings in this Software without prior written       --</EM></FONT>
<FONT COLOR=green><EM>-- authorization.                                                           --</EM></FONT>
<FONT COLOR=green><EM>------------------------------------------------------------------------------</EM></FONT>
<FONT COLOR=green><EM>--  <A HREF="http://home.t-online.de/home/Juergen.Pfeifer">J&uuml;rgen Pfeifer</A> (<A HREF="mailto:Juergen.Pfeifer@T-Online.de">Juergen.Pfeifer@T-Online.de</A>) 1996                      --</EM></FONT>
<FONT COLOR=green><EM>--  Version Control:</EM></FONT>
<FONT COLOR=green><EM>--  @Revision: 1.15 @</EM></FONT>
<FONT COLOR=green><EM>--  Binding Version 00.93</EM></FONT>
<FONT COLOR=green><EM>------------------------------------------------------------------------------</EM></FONT>
<FONT COLOR=green><EM>--  mouse binding.</EM></FONT>
<FONT COLOR=green><EM>--  This module is generated. Please don't change it manually!</EM></FONT>
<FONT COLOR=green><EM>--  Run the generator instead.</EM></FONT>
<FONT COLOR=green><EM>--  |</EM></FONT>
<b>with</b> System;

<b>package</b> Terminal_Interface.Curses.Mouse <b>is</b>

  <FONT COLOR=green><EM>--  |=====================================================================</EM></FONT>
  <FONT COLOR=green><EM>--  | Man page <A HREF="../man/curs_mouse.3x.html">curs_mouse.3x</A></EM></FONT>
  <FONT COLOR=green><EM>--  |=====================================================================</EM></FONT>
  <FONT COLOR=green><EM>--  Please note, that in ncurses-1.9.9e documentation mouse support</EM></FONT>
  <FONT COLOR=green><EM>--  is still marked as experimental. So also this binding will change</EM></FONT>
  <FONT COLOR=green><EM>--  if the ncurses methods change.</EM></FONT>
  <FONT COLOR=green><EM>--</EM></FONT>
   <b>type</b> Event_Mask <b>is</b> <b>private</b>;
   <FONT COLOR=red><A NAME="58_4">No_Events</A></FONT>  : <b>constant</b> <A HREF="terminal_interface-curses-mouse__ads.htm#56_9">Event_Mask</A>;
   All_Events : <b>constant</b> Event_Mask;

   <b>type</b> Mouse_Button <b>is</b> (Left,    <FONT COLOR=green><EM>-- aka: Button 1</EM></FONT>
                         Middle,  <FONT COLOR=green><EM>-- aka: Button 2</EM></FONT>
                         Right,   <FONT COLOR=green><EM>-- aka: Button 3</EM></FONT>
                         Button4, <FONT COLOR=green><EM>-- aka: Button 4</EM></FONT>
                         Control, <FONT COLOR=green><EM>-- Control Key</EM></FONT>
                         Shift,   <FONT COLOR=green><EM>-- Shift Key</EM></FONT>
                         Alt);    <FONT COLOR=green><EM>-- ALT Key</EM></FONT>

   <b>type</b> Button_State <b>is</b> (Released,
                         <FONT COLOR=red><A NAME="70_26">Pressed</A></FONT>,
                         Clicked,
                         <FONT COLOR=red><A NAME="72_26">Double_Clicked</A></FONT>,
                         Triple_Clicked);

   <b>type</b> Button_States <b>is</b> <b>array</b> (Button_State) <b>of</b> Boolean;
   <b>pragma</b> Pack (Button_States);

   All_Clicks : <b>constant</b> Button_States := (Clicked .. Triple_Clicked => True,
                         <A HREF="terminal_interface-curses-mouse__ads.htm#74_9"> </A>                 <b>others</b> => False);
   All_States : <b>constant</b> Button_States := (<b>others</b> => True);

   <b>type</b> Mouse_Event <b>is</b> <b>private</b>;

  <FONT COLOR=green><EM>--  |=====================================================================</EM></FONT>
  <FONT COLOR=green><EM>--  | Man page <A HREF="../man/curs_mouse.3x.html">curs_mouse.3x</A></EM></FONT>
  <FONT COLOR=green><EM>--  |=====================================================================</EM></FONT>

   <b>function</b> Has_Mouse <b>return</b> Boolean;
  <FONT COLOR=green><EM>--  Return true if a mouse device is supported, false otherwise.</EM></FONT>

   <b>procedure</b> Register_Reportable_Event
     (B    : <b>in</b> <A HREF="terminal_interface-curses-mouse__ads.htm#68_9">Mouse_Button</A>;
      <FONT COLOR=red><A NAME="93_7">S</A></FONT>    : <b>in</b> Button_State;
      Mask : <b>in</b> <b>out</b> Event_Mask);
  <FONT COLOR=green><EM>--  Stores the event described by the button and the state in the mask.</EM></FONT>
  <FONT COLOR=green><EM>--  Before you call this the first time, you should init the mask</EM></FONT>
  <FONT COLOR=green><EM>--  with the Empty_Mask constant</EM></FONT>
   <b>pragma</b> Inline (Register_Reportable_Event);

   <b>procedure</b> Register_Reportable_Events
     (B    : <b>in</b> <A HREF="terminal_interface-curses-mouse__ads.htm#74_9">Mouse_Button</A>;
      <FONT COLOR=red><A NAME="102_7">S</A></FONT>    : <b>in</b> Button_States;
      Mask : <b>in</b> <b>out</b> Event_Mask);
  <FONT COLOR=green><EM>--  Stores the events described by the button and the states in the mask.</EM></FONT>
  <FONT COLOR=green><EM>--  Before you call this the first time, you should init the mask</EM></FONT>
  <FONT COLOR=green><EM>--  with the Empty_Mask constant</EM></FONT>

  <FONT COLOR=green><EM>--  <A NAME="AFU_1">|</EM></FONT>
  <FONT COLOR=green><EM>--  There is one difference to mousmask(): we return the value of the</EM></FONT>
  <FONT COLOR=green><EM>--  old mask, that means the event mask value before this call.</EM></FONT>
   <b>function</b> Start_Mouse (Mask : <A HREF="terminal_interface-curses-mouse__ads.htm#56_9">Event_Mask</A> := All_Events)
                         <b>return</b> Event_Mask;
  <FONT COLOR=green><EM>--  AKA: <A HREF="../man/curs_mouse.3x.html">mousemask()</A></EM></FONT>
   <b>pragma</b> Inline (Start_Mouse);

   <b>procedure</b> End_Mouse (Mask : <b>in</b> Event_Mask := No_Events);
  <FONT COLOR=green><EM>--  Terminates the mouse, restores the specified event mask</EM></FONT>
   <b>pragma</b> Inline (End_Mouse);

  <FONT COLOR=green><EM>--  <A NAME="AFU_2">|</EM></FONT>
   <b>function</b> Get_Mouse <b>return</b> Mouse_Event;
  <FONT COLOR=green><EM>--  AKA: <A HREF="../man/curs_mouse.3x.html">getmouse()</A></EM></FONT>
   <b>pragma</b> Inline (Get_Mouse);

   <b>procedure</b> Get_Event (Event  : <b>in</b>  <A HREF="terminal_interface-curses__ads.htm#58_9">Mouse_Event</A>;
                        Y      : <b>out</b> <A HREF="terminal_interface-curses__ads.htm#59_9">Line_Position</A>;
                        X      : <b>out</b> <A HREF="terminal_interface-curses-mouse__ads.htm#60_9">Column_Position</A>;
                        Button : <b>out</b> <A HREF="terminal_interface-curses-mouse__ads.htm#68_9">Mouse_Button</A>;
                        State  : <b>out</b> Button_State);
  <FONT COLOR=green><EM>--  !!! Warning: X and Y are screen coordinates. Due to ripped of lines they</EM></FONT>
  <FONT COLOR=green><EM>--  may not be identical to window coordinates.</EM></FONT>
   <b>pragma</b> Inline (Get_Event);

  <FONT COLOR=green><EM>--  <A NAME="AFU_3">|</EM></FONT>
   <b>procedure</b> Unget_Mouse (Event : <b>in</b> Mouse_Event);
  <FONT COLOR=green><EM>--  AKA: <A HREF="../man/curs_mouse.3x.html">ungetmouse()</A></EM></FONT>
   <b>pragma</b> Inline (Unget_Mouse);

  <FONT COLOR=green><EM>--  <A NAME="AFU_4">|</EM></FONT>
   <b>function</b> Enclosed_In_Window (<FONT COLOR=red><A NAME="140_33">Win</A></FONT>    : <A HREF="terminal_interface-curses-mouse__ads.htm#81_9">Window</A> := Standard_Window;
                                Event  : Mouse_Event) <b>return</b> Boolean;
  <FONT COLOR=green><EM>--  AKA: <A HREF="../man/curs_mouse.3x.html">wenclose()</A></EM></FONT>
  <FONT COLOR=green><EM>--  But : use event instead of screen coordinates.</EM></FONT>
   <b>pragma</b> Inline (Enclosed_In_Window);

  <FONT COLOR=green><EM>--  <A NAME="AFU_5">|</EM></FONT>
   <b>function</b> Mouse_Interval (Msec : Natural := 200) <b>return</b> Natural;
  <FONT COLOR=green><EM>--  AKA: <A HREF="../man/curs_mouse.3x.html">mouseinterval()</A></EM></FONT>
   <b>pragma</b> Inline (Mouse_Interval);

<b>private</b>
   <b>type</b> Event_Mask <b>is</b> <b>new</b><A HREF="terminal_interface-curses-mouse__ads.htm#56_9"> </A>Interfaces.C.int;
   <A HREF="terminal_interface-curses-mouse__ads.htm#58_4">No_Events</A>  : <b>constant</b> <A HREF="terminal_interface-curses-mouse__ads.htm#56_9">Event_Mask</A> := 0;
   All_Events : <b>constant</b> Event_Mask := -1;

   <b>type</b> Mouse_Event <b>is</b>
      <b>record</b>
         Id      : Integer <b>range</b> Integer (<A HREF="interfac__ads.htm>3_9">Interfaces</A>.<A HREF="i-c__ads.htm>0_20">C</A>.<A HREF="i-c__ads.htm#36_9">short</A>'First) ..
                                 Integer (<A HREF="interfac__ads.htm>3_9">Interfaces</A>.<A HREF="i-c__ads.htm>0_20">C</A>.<A HREF="i-c__ads.htm#35_9">short</A>'Last);
         X, Y, Z : Integer <b>range</b> Integer (<A HREF="interfac__ads.htm>3_9">Interfaces</A>.<A HREF="i-c__ads.htm>0_20">C</A>.<A HREF="i-c__ads.htm#35_9">int</A>'First) ..
         <FONT COLOR=red><A NAME="161_10"> </A></FONT>         <A HREF="terminal_interface-curses-mouse__ads.htm#56_9"> </A>             Integer (Interfaces.C.int'Last);
         Bstate  : Event_Mask;
      <b>end</b> <b>record</b>;
   <b>pragma</b> Convention (C, Mouse_Event);
   <b>pragma</b> Pack (Mouse_Event);

   <b>for</b> Mouse_Event <b>use</b>
      <b>record</b>
         Id      <b>at</b> 0 <b>range</b>   0 ..  15;
         X       <b>at</b> 0 <b>range</b>  32 ..  63;
         Y       <b>at</b> 0 <b>range</b>  64 ..  95;
         Z       <b>at</b> 0 <b>range</b>  96 .. 127;
         Bstate  <b>at</b> 0 <b>range</b> 128 .. 159;
      <b>end</b> <b>record</b>;
     <FONT COLOR=green><EM>--  Please note: this rep. clause is generated and may be</EM></FONT>
     <FONT COLOR=green><EM>--               different on your system.</EM></FONT>

   Generation_Bit_Order : <b>constant</b> System.Bit_Order := System.Low_Order_First;
  <FONT COLOR=green><EM>--  This constant may be different on your system.</EM></FONT>

<b>end</b> Terminal_Interface.Curses.Mouse;
</PRE></BODY></HTML>