# nothing below this line should need changing. If you absolutely have to,
# drop me a note including your changes. zmbenhal@netcom.com

SRCS=	comp_main.c comp_hash.c comp_captab.c comp_scan.c comp_error.c \
	comp_parse.c read_entry.c dump_entry.c names.c strerror.c \
	lib_setup.c lib_kernel.c lib_tparm.c lib_tputs.c lib_slk.c lib_pad.c\
	lib_unctrl.c lib_raw.c lib_vidattr.c lib_trace.c lib_ti.c lib_keyname.c\
	lib_beep.c lib_doupdate.c lib_refresh.c lib_initscr.c lib_newwin.c \
	lib_addch.c lib_addstr.c lib_scroll.c lib_clreol.c lib_touch.c \
	lib_mvcur.c lib_delwin.c lib_endwin.c lib_clrbot.c lib_move.c \
	lib_printw.c lib_scanw.c lib_erase.c lib_getch.c lib_options.c \
	lib_box.c lib_clear.c lib_delch.c lib_insch.c lib_bkgd.c\
	lib_insdel.c lib_getstr.c lib_mvwin.c lib_longname.c lib_tstp.c \
	lib_newterm.c lib_set_term.c lib_overlay.c lib_scrreg.c lib_color.c \
	lib_insstr.c lib_termcap.c lib_twait.c sigaction.c lib_window.c

# Normal, optimised object files
LIBOBJS= lib_setup.o lib_kernel.o lib_tparm.o read_entry.o lib_tputs.o lib_pad.o\
	lib_unctrl.o lib_raw.o lib_vidattr.o lib_trace.o lib_beep.o names.o\
	lib_doupdate.o lib_refresh.o lib_initscr.o lib_newwin.o lib_addch.o \
	lib_addstr.o lib_scroll.o lib_clreol.o lib_touch.o lib_mvcur.o lib_keyname.o\
	lib_delwin.o lib_endwin.o lib_clrbot.o lib_move.o lib_printw.o \
	lib_scanw.o lib_erase.o lib_getch.o lib_options.o lib_acs.o lib_slk.o\
	lib_box.o lib_clear.o lib_delch.o lib_insch.o lib_ti.o lib_bkgd.o\
	lib_insdel.o lib_getstr.o lib_mvwin.o lib_longname.o lib_tstp.o \
	lib_newterm.o lib_set_term.o lib_overlay.o lib_scrreg.o lib_color.o \
	lib_insstr.o lib_termcap.o lib_twait.o sigaction.o strerror.o lib_window.o

# Debugging object files
DLIBOBJS= lib_setup.d lib_kernel.d lib_tparm.d read_entry.d lib_tputs.d lib_pad.d\
	lib_unctrl.d lib_raw.d lib_vidattr.d lib_trace.d lib_beep.d names.d\
	lib_doupdate.d lib_refresh.d lib_initscr.d lib_newwin.d lib_addch.d \
	lib_addstr.d lib_scroll.d lib_clreol.d lib_touch.d lib_mvcur.d lib_keyname.d\
	lib_delwin.d lib_endwin.d lib_clrbot.d lib_move.d lib_printw.d \
	lib_scanw.d lib_erase.d lib_getch.d lib_options.d lib_acs.d lib_slk.d\
	lib_box.d lib_clear.d lib_delch.d lib_insch.d lib_ti.d lib_bkgd.d\
	lib_insdel.d lib_getstr.d lib_mvwin.d lib_longname.d lib_tstp.d \
	lib_newterm.d lib_set_term.d lib_overlay.d lib_scrreg.d lib_color.d \
	lib_insstr.d lib_termcap.d lib_twait.d sigaction.o strerror.d lib_window.d

COMPOBJS= comp_main.o comp_captab.o comp_hash.o comp_scan.o comp_error.o \
	comp_parse.o captoinfo.o read_entry.o dump_entry.o names.o

.SUFFIXES: .d

.c.o:
	$(CC) -c $(CFLAGS) -o $*.o $*.c

.c.d:
	$(CC) -c $(DFLAGS) -o $*.d $*.c

CMDS = tic infocmp clear tput

all: $(CMDS) $(LIBS)

libs:	$(LIBS)

install:
	echo "Choose one or more of the follwing options:"
	echo "install.libs install.man install.cmds install.data"
	echo "or use install.all"

install.all:	install.libs install.man install.cmds install.data

BIN=$(INSTALL_DIR)/bin

$(INCLUDE) $(LIB) $(SRCDIR) $(BIN):
	mkdir -p $@

install.libs: terminfo.h $(LIBS) $(INCLUDE) $(LIB)
	$(INSTALL) -c -m 0644 -o bin -g bin terminfo.h $(INCLUDE)/term.h
	$(INSTALL) -c -m 0644 -o bin -g bin curses.h $(INCLUDE)/curses.h
	$(INSTALL) -c -m 0644 -o bin -g bin unctrl.h $(INCLUDE)/unctrl.h
	$(INSTALL) -c -m 0644 -o bin -g bin termcap.h $(INCLUDE)/termcap.h
	@for lib in $(LIBS); do \
		echo installing $${lib} as $(LIB)/$${lib}; \
		$(INSTALL) -c -m 0644 -o bin -g bin $${lib} $(LIB)/$${lib}; \
		ranlib $(LIB)/$${lib}; \
	done
	@echo "Make sure you delete any old header files!"

install.man:
	(cd ../man; make SRCDIR=$(SRCDIR) INSTALL=$(INSTALL) MAN=$(MAN) )

install.cmds: $(CMDS) $(BIN)
	$(INSTALL) -c -s -m 755 -o bin -g bin tic $(BIN)/tic
	-rm -f $(BIN)/untic
	$(INSTALL) -c -s -m 755 -o bin -g bin infocmp $(BIN)/infocmp
	$(INSTALL) -c -s -m 755 -o bin -g bin clear $(BIN)/clear
	$(INSTALL) -c -s -m 755 -o bin -g bin tput $(BIN)/tput
	@echo "linking captoinfo to tic"
	@echo "ignore any error messages"
	-@ln $(BIN)/tic $(BIN)/captoinfo 

alias:
	-(cd $(INCLUDE); ln curses.h ncurses.h; ln term.h nterm.h)

install.data: $(SRCDIR) 
	@for e in ../data/*; do \
		echo compiling $$e entry;\
		$(BIN)/tic $$e;\
	done

lib:	terminfo.h libncurses.a	
libncurses.a:	${LIBOBJS}
	ar rv libncurses.a $?
	ranlib libncurses.a

dlib:	terminfo.h libdcurses.a	
libdcurses.a:	${DLIBOBJS}
	ar rv libdcurses.a $?
	ranlib libdcurses.a

tic: ${COMPOBJS}
	$(CC) $(FLAGS) -o tic ${COMPOBJS}

clear: clear.c libncurses.a 
	$(CC) $(FLAGS) clear.c libncurses.a -o clear

tput: tput.c libncurses.a 
	$(CC) $(FLAGS) tput.c libncurses.a -o tput

infocmp: infocmp.o names.o dump_entry.o read_entry.o
	$(CC) $(FLAGS) -o infocmp infocmp.o names.o dump_entry.o read_entry.o

keys.tries: keys.list
	awk -f MKkeys.awk keys.list > keys.tries

lib_options.o: keys.tries lib_options.c terminfo.h

lib_options.c: keys.tries

terminfo.h: Caps MKterm.h.awk
	awk -f MKterm.h.awk Caps > terminfo.h

hashsize.h: Caps MKhashsize.sh
	sh MKhashsize.sh >hashsize.h

comp_captab.c: Caps MKcaptab.awk
	awk -f MKcaptab.awk Caps > comp_captab.c

comp_captab.o: comp_captab.c comp_captab.c hashsize.h

comp_hash.o: comp_hash.c hashsize.h

comp_main.o: comp_main.c tic.h terminfo.h version.h dump_entry.h
	$(CC) $(CFLAGS) -DSRCDIR=\"$(SRCDIR)\" -o comp_main.o -c comp_main.c

comp_parse.o: comp_parse.c tic.h object.h terminfo.h dump_entry.h
	$(CC) $(CFLAGS) -DSRCDIR=\"$(SRCDIR)\" -o comp_parse.o -c comp_parse.c

infocmp.o: infocmp.c terminfo.h tic.h dump_entry.h
	$(CC) $(CFLAGS) -DSRCDIR=\"$(SRCDIR)\" -o infocmp.o -c infocmp.c

dump_entry.o: dump_entry.c termsort.c terminfo.h tic.h dump_entry.h
	$(CC) $(CFLAGS) -DSRCDIR=\"$(SRCDIR)\" -o dump_entry.o -c dump_entry.c

lib_setup.o: lib_setup.c
	$(CC) $(CFLAGS) -DSRCDIR=\"$(SRCDIR)\" -o lib_setup.o -c lib_setup.c

lib_setup.d: lib_setup.c
	$(CC) $(DFLAGS) -DSRCDIR=\"$(SRCDIR)\" -o lib_setup.d -c lib_setup.c

lib_keyname.c: keys.list MKkeyname.awk
	awk -f MKkeyname.awk keys.list > lib_keyname.c

names.c: Caps MKnames.awk
	awk -f MKnames.awk Caps
	cat boolnames boolfnames boolcodes numnames numfnames numcodes strnames strfnames strcodes> names.c
	rm -f boolnames boolfnames boolcodes numnames numfnames numcodes strnames strfnames strcodes

termsort.c: Caps termsort.sh
	termsort.sh >termsort.c

clean:
	rm -f *.[aod] comp_captab.c tags lib_keyname.c keys.tries names.c

clobber: clean
	rm -f clear tput tic infocmp Config.* termsort.c hashsize.h terminfo.h Makefile 


